switch:
    ####################################################
    #                                                  #
    #                     SWITCHES                     #
    #                                                  #
    ####################################################
  - platform: rest
    resource: !secret container_gitlab
    name: Container Gitlab
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'

  - platform: rest
    resource: !secret container_gitlab-runner
    name: Container Gitlab Runner 1
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'

  - platform: rest
    resource: !secret container_gitlab-runner2
    name: Container Gitlab Runner 2
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'

  - platform: rest
    resource: !secret container_gitlab-runner3
    name: Container Gitlab Runner 3
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'

  - platform: rest
    resource: !secret container_gitlab-runner4
    name: Container Gitlab Runner 4
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'

  - platform: rest
    resource: !secret container_grafana
    name: Container Grafana
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'

  - platform: rest
    resource: !secret container_net-tools
    name: Container Net-Tools
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'

  - platform: rest
    resource: !secret container_nginx
    name: Container NGiNX
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
    
  - platform: rest
    resource: !secret container_omada-controller
    name: Container Omada Controller
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'

  - platform: rest
    resource: !secret container_portainer
    name: Container Portainer - Automation
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'

  - platform: rest
    resource: !secret container_ring-mqtt
    name: Container Ring MQTT
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'

  - platform: rest
    resource: !secret container_automation_samba_1
    name: Container Samba - Automation
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'

  - platform: rest
    resource: !secret container_watchtower
    name: Container Watchtower - Automation
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'

    ####################################################
    #                                                  #
    #                     TEMPLATE                     #
    #                                                  #
    ####################################################

  - platform: template
    switches:

      ring_unavailable:
        friendly_name: Ring Unavailable
        value_template: "{{ is_state('alarm_control_panel.crackyns_cave_alarm', 'unavailable') }}"
        turn_on:
        turn_off:

      fullykiosk_screensaver:
        friendly_name: Screensaver
        icon_template: mdi:power-sleep
        value_template: "{{ is_state_attr('sensor.fullykiosk', 'isInScreensaver', true) }}"
        turn_on:
          - service: shell_command.fullykiosk_screensaver_on
        turn_off:
          - service: shell_command.fullykiosk_screensaver_off

